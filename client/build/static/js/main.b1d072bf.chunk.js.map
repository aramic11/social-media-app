{"version":3,"sources":["reportWebVitals.js","store/auth.js","store/store.js","pages/Comment/styles.js","graphql/Post/GetPost.js","graphql/Comment/CreateComment.js","graphql/Post/LikePost.js","components/LikeButton/PostLikeButton.js","graphql/Comment/LikeComment.js","components/LikeButton/CommentLikeButton.js","graphql/Post/DeletePost.js","components/OptionButton/styles.js","components/OptionButton/OptionButton.js","graphql/Comment/DeleteComment.js","components/OptionButton/DeleteComment.js","pages/Comment/Comment.js","graphql/Post/GetPosts.js","pages/Home/styles.js","components/PostCard/styles.js","components/CommentButton/CommentButton.js","components/PostCard/PostCard.js","pages/Home/Home.js","components/Navbar/styles.js","components/Navbar/Navbar.js","pages/Post/styles.js","pages/SignIn/styles.js","graphql/Post/CreatePost.js","pages/Post/Post.js","graphql/User/SignIn.js","pages/SignIn/SignIn.js","graphql/User/SignUp.js","pages/SignUp/SignUp.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","authInitialState","user","authReducer","state","action","type","_objectSpread","payload","localStorage","getItem","decodedToken","decode","exp","Date","now","removeItem","StoreContext","createContext","StoreProvider","props","_useReducer","useReducer","_useReducer2","_slicedToArray","dispatch","_jsx","Provider","value","login","userData","setItem","authToken","logout","useStyles","makeStyles","theme","root","maxWidth","position","margin","title","padding","username","display","marginBottom","makeComment","comment","inputField","date","paddingLeft","media","paddingTop","content","like","commentUsername","commentContent","optionButtonOverlay","top","right","deleteButtonOverlay","createTheme","overrides","MuiCardActions","MuiCardContent","paddingBottom","MuiIconButton","fontSize","MuiFormControl","marginNormal","marginTop","MuiTypography","h6","fontFamily","color","h5","textAlign","palette","primary","main","secondary","GET_POST","gql","_templateObject","_taggedTemplateLiteral","CREATE_COMMENT","LIKE_POST","PostLikeButton","_ref$post","post","id","postLikes","_useState","useState","_useState2","isLiked","setIsLiked","useEffect","some","_useMutation","useMutation","variables","postId","likePost","likeButton","IconButton","onClick","undefined","disabled","children","Tooltip","placement","FavoriteIcon","CardActions","LIKE_COMMENT_MUTATION","CommentLikeButton","commentId","liked","setLiked","hasLiked","commentLikes","LIKE_COMMENT","likeComment","href","DELETE_POST","optionButton","spacing","formControl","minWidth","OptionButton","setAction","_useState3","_useState4","open","setOpen","_useState5","_useState6","error","setError","classes","deletePost","handleConfirmClose","handleAgree","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","window","location","assign","t0","graphQLErrors","message","stop","apply","arguments","_jsxs","MoreVertIcon","event","currentTarget","Menu","anchorEl","keepMounted","Boolean","onClose","MenuItem","Alert","severity","className","Dialog","DialogTitle","DialogActions","Button","autoFocus","DELETE_COMMENT","DeleteCommentDialog","onConfirm","DeleteCommentButton","onComplete","_useMutation2","deleteComment","_useMutation2$","loading","handleClose","_ref3","console","_Fragment","DeleteIcon","variant","CircularProgress","CommentPage","postAndComment","match","params","useContext","_useQuery","useQuery","_useQuery$data","data","getPost","setComment","createComment","handleCommentSubmit","_x","dateCreated","imageUrl","postLikeCount","comments","ThemeProvider","Card","CardContent","Typography","gutterBottom","component","moment","fromNow","CardMedia","image","TextField","label","name","size","required","fullWidth","onChange","target","trim","map","commentLikeCount","GET_POSTS","container","borderRadius","flexDirection","alignItems","backgroundColor","boxShadow","textShadow","h3","fontWeight","transition","expand","transform","marginLeft","transitions","create","duration","shortest","expandOpen","paddingRight","overlay","left","CommentButton","commented","setCommented","hasCommented","icon","CommentIcon","PostCard","commentCount","_React$useState","React","_React$useState2","expanded","setExpanded","length","substring","disableSpacing","concat","DonateApp","clsx","_defineProperty","ExpandMoreIcon","Collapse","in","timeout","unmountOnExit","Home","posts","getPosts","Grid","Container","align","item","xs","sm","md","flexGrow","textDecoration","button","light","dark","contrastText","MuiAppBar","colorPrimary","background","MenuAppBar","context","AppBar","Toolbar","Link","to","paper","form","width","submit","textTransform","height","backgroundImage","grey","backgroundSize","backgroundPosition","avatar","CREATE_POST","Post","postFormData","setPostFormData","handleInputChange","_event$target","createPost","handleFormSubmit","preventDefault","abrupt","CssBaseline","noValidate","onSubmit","multiline","LOGIN","SignInForm","password","userFormData","setUserFormData","signIn","_yield$signIn","sent","Paper","elevation","square","CREATE_USER","SignUpForm","email","onError","addUser","validate","test","String","toLowerCase","validationError","_yield$addUser","createUser","autoComplete","App","Router","Navbar","Route","exact","path","SignIn","SignUp","Comment","Chat","Profile","UserSearch","FollowButton","httpLink","createHttpLink","uri","authLink","setContext","token","headers","Authorization","client","ApolloClient","link","cache","InMemoryCache","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.b1d072bf.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// Define action types\nconst LOGIN = \"LOGIN\";\nconst LOGOUT = \"LOGOUT\";\n\n// Define initial state for authentication-related state\nconst authInitialState = {\n  user: null,\n};\n\n// Define reducer function for authentication-related state\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case LOGIN:\n      // When the LOGIN action is dispatched, update the user property of the state\n      return {\n        ...state,\n        user: action.payload,\n      };\n\n    case LOGOUT:\n      // When the LOGOUT action is dispatched, reset the state to the initial state\n      return {\n        ...state,\n        ...authInitialState,\n      };\n\n    default:\n      // If an action is dispatched that is not recognized, return the current state\n      return state;\n  }\n};\n\n// Export the initial state and the reducer function\nexport { authInitialState, authReducer };\n","import React, { createContext, useReducer } from \"react\";\nimport { authReducer } from \"./auth\";\nimport decode from \"jwt-decode\";\n\n// Set initial state for auth-related state\nconst authInitialState = {\n  user: null,\n};\n\n// Check if token exists in localStorage\nif (localStorage.getItem(\"token\")) {\n  // If token exists, decode it to get the payload\n  const decodedToken = decode(localStorage.getItem(\"token\"));\n\n  // Check if token has expired\n  if (decodedToken.exp * 1000 < Date.now()) {\n    localStorage.removeItem(\"token\"); // Remove token if it has expired\n  } else {\n    authInitialState.user = decodedToken; // Set user object to the decoded token payload\n  }\n}\n\n// Create context object for the state and its updater functions\nconst StoreContext = createContext({ user: null });\n\n// Create provider component that wraps its children with the context object\nconst StoreProvider = (props) => {\n  // Use authReducer to update the state object based on dispatched actions\n  const [state, dispatch] = useReducer(authReducer, authInitialState);\n\n  // Define login function to update state with user data and save token to localStorage\n  const login = (userData) => {\n    localStorage.setItem(\"token\", userData.authToken);\n    dispatch({\n      type: \"LOGIN\",\n      payload: userData,\n    });\n  };\n\n  // Define logout function to remove token from localStorage and reset state\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    dispatch({ type: \"LOGOUT\" });\n  };\n\n  // Provide state and its updater functions to children via context object\n  return (\n    <StoreContext.Provider\n      value={{ user: state.user, login, logout }}\n      {...props}\n    />\n  );\n};\n\nexport { StoreContext, StoreProvider };\n\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport { createTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 1200,\n    position: \"relative\",\n    margin: \"7% 15% 5% 15%\",\n  },\n  title: {\n    padding: \"3% 0% 0% 3%\",\n  },\n  username: {\n    display: \"inline-block\",\n    padding: \"0% 3%\",\n    marginBottom: \"2%\",\n  },\n  makeComment: {\n    maxWidth: 1200,\n    position: \"relative\",\n    margin: \"5% 15% 5% 15%\",\n  },\n  comment: {\n    maxWidth: 1200,\n    position: \"relative\",\n    margin: \"3% 15% 3% 15%\",\n  },\n  inputField: {\n    margin: \"2.5% 2.5% 1.5% 2.5%\",\n  },\n  date: {\n    display: \"inline-block\",\n    paddingLeft: \"10\",\n  },\n  media: {\n    paddingTop: \"100%\",\n    marginBottom: \"5%\",\n  },\n  content: {\n    paddingLeft: \"3%\",\n  },\n  like: {\n    paddingLeft: \"1%\",\n  },\n  commentUsername: {\n    display: \"inline-block\",\n    padding: \"2% 3%\",\n  },\n  commentContent: {\n    padding: \"0% 0% 1% 3%\",\n  },\n  optionButtonOverlay: {\n    position: \"absolute\",\n    top: \"1%\",\n    right: \"5px\",\n  },\n  deleteButtonOverlay: {\n    position: \"absolute\",\n    top: \"58%\",\n    right: \"3px\",\n  },\n}));\n\nconst theme = createTheme({\n  overrides: {\n    MuiCardActions: {\n      root: {\n        padding: \"1.5px\",\n      },\n    },\n    MuiCardContent: {\n      root: {\n        padding: \"0\",\n        \"&:last-child\": {\n          paddingBottom: 0,\n        },\n      },\n    },\n    MuiIconButton: {\n      root: {\n        fontSize: \"0\",\n      },\n    },\n    MuiFormControl: {\n      marginNormal: {\n        marginTop: 0,\n        marginBottom: \"8px\",\n      },\n    },\n    MuiTypography: {\n      h6: {\n        fontFamily: \"Arial, sans-serif\",\n        fontSize: \"1.3rem\",\n        color: \"#4791db\",\n      },\n      h5: {\n        fontFamily: \"Arial, sans-serif\",\n        color: \"#f44336\",\n        fontSize: \"3rem\",\n        textAlign: \"center\",\n      },\n    },\n  },\n  palette: {\n    primary: {\n      main: \"#4791db\",\n    },\n    secondary: {\n      main: \"#f44336\",\n    },\n  },\n});\n\nexport { useStyles, theme };\n","import gql from \"graphql-tag\";\n\nconst GET_POST = gql`\n  query getPost($postId: ID!) {\n    getPost(postId: $postId) {\n      id\n      imageUrl\n      title\n      content\n      dateCreated\n      username\n      postLikes {\n        id\n        username\n        dateCreated\n      }\n      postLikeCount\n      comments {\n        id\n        content\n        dateCreated\n        username\n        commentLikes {\n          id\n          username\n          dateCreated\n        }\n        commentLikeCount\n      }\n    }\n  }\n`;\n\nexport default GET_POST;\n","import gql from \"graphql-tag\";\n\n// Defining a GraphQL mutation to create a new comment for a post.\nconst CREATE_COMMENT = gql`\n  mutation createComment($postId: String!, $content: String!) {\n    createComment(postId: $postId, content: $content) {\n      id\n      comments {\n        id\n        content\n        dateCreated\n        username\n        commentLikes {\n          id\n          username\n          dateCreated\n        }\n        commentLikeCount\n      }\n      commentCount\n    }\n  }\n`;\n\nexport default CREATE_COMMENT;\n","import gql from \"graphql-tag\";\n\nconst LIKE_POST = gql`\n  mutation likePost($postId: ID!) {\n    likePost(postId: $postId) {\n      id\n      postLikes {\n        id\n        username\n        dateCreated\n      }\n      postLikeCount\n    }\n  }\n`;\n\nexport default LIKE_POST;\n","import React, { useEffect, useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { IconButton, CardActions, Tooltip } from \"@material-ui/core\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport LIKE_POST from \"../../graphql/Post/LikePost\";\n\nconst PostLikeButton = ({ user, post: { id, postLikes } }) => {\n  // Declare a state variable to keep track of whether the post is liked\n  const [isLiked, setIsLiked] = useState(false);\n\n  // Update the state variable when the post likes or user changes\n  useEffect(() => {\n    setIsLiked(!!user && postLikes.some((like) => like.username === user.username));\n  }, [user, postLikes]);\n\n  // Declare a mutation to like the post\n  const [likePost] = useMutation(LIKE_POST, {\n    variables: { postId: id },\n  });\n\n  // Handle the click event when the user clicks the like button\n  const handleLike = () => {\n    likePost();\n    setIsLiked(!isLiked);\n  };\n\n  // Render the like button with a tooltip indicating whether the post is liked or not\n  const likeButton = (\n    <IconButton aria-label=\"like\" onClick={user ? handleLike : undefined} disabled={!user}>\n      <Tooltip title={isLiked ? \"Unlike\" : \"Like\"} placement=\"top\">\n        <FavoriteIcon color={isLiked ? \"secondary\" : \"disabled\"} />\n      </Tooltip>\n    </IconButton>\n  );\n\n  // Render the like button in a CardAction component\n  return <CardActions>{likeButton}</CardActions>;\n};\n\nexport default PostLikeButton;\n\n","import { gql } from \"graphql-tag\";\n\n// GraphQL mutation to like a comment\nconst LIKE_COMMENT_MUTATION = gql`\n  mutation likeComment($postId: ID!, $commentId: ID!) {\n    likeComment(postId: $postId, commentId: $commentId) {\n      id\n      comments {\n        id\n        commentLikes {\n          id\n          username\n        }\n        commentLikeCount\n      }\n    }\n  }\n`;\n\nexport default LIKE_COMMENT_MUTATION;\n\n","import React, { useEffect, useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { IconButton, CardActions } from \"@material-ui/core\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport LIKE_COMMENT from \"../../graphql/Comment/LikeComment\";\n\nconst CommentLikeButton = ({ user, postId, commentId, comment }) => {\n  const [liked, setLiked] = useState(false);\n\n  // Check if the user has already liked the comment\n  useEffect(() => {\n    // If the user exists and there is a comment like whose username matches the user's username, set liked to true\n    const hasLiked = user && comment.commentLikes.some(like => like.username === user.username);\n    setLiked(hasLiked);\n  }, [user, comment.commentLikes]);\n\n  // Define the likeComment mutation\n  const [likeComment] = useMutation(LIKE_COMMENT, {\n    variables: { postId, commentId },\n  });\n\n  // Handle the like button click event and update the state accordingly\n  const handleLike = () => {\n    likeComment();\n    setLiked(!liked);\n  };\n\n  // Render the like button in the appropriate color based on whether the user has liked the comment\n  const likeButton = user ? (\n    <IconButton aria-label=\"like\" color={liked ? \"secondary\" : \"default\"} onClick={handleLike}>\n      <FavoriteIcon />\n    </IconButton>\n  ) : (\n    <IconButton aria-label=\"like\" href=\"/login\">\n      <FavoriteIcon color=\"disabled\" />\n    </IconButton>\n  );\n\n  // Render the like button inside a CardActions component\n  return (\n    <CardActions>\n      {likeButton}\n    </CardActions>\n  );\n};\n\nexport default CommentLikeButton;\n\n\n","import gql from \"graphql-tag\";\n\nconst DELETE_POST = gql`\n  mutation deletePost($postId: ID!) {\n    deletePost(postId: $postId)\n  }\n`;\n\nexport default DELETE_POST;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\n// Creating styles using makeStyles hook\nconst useStyles = makeStyles((theme) => ({\n  optionButton: {\n    display: \"block\",\n    marginTop: theme.spacing(3),\n  },\n  formControl: {\n    margin: theme.spacing(2),\n    minWidth: 120,\n  },\n  deleteButtonOverlay: {\n    position: \"absolute\",\n    top: \"60%\",\n    right: \"4px\",\n  },\n}));\n\nexport default useStyles;\n","import { React, useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { Alert } from \"@material-ui/lab\";\nimport { Button, Dialog, DialogActions, DialogTitle, Menu, MenuItem } from \"@material-ui/core\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport DELETE_POST from \"../../graphql/Post/DeletePost\";\nimport useStyles from \"./styles\";\n\nconst OptionButton = ({ user, post: { id, username } }) => {\n  const [action, setAction] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [deletePost] = useMutation(DELETE_POST);\n\n  const handleConfirmOpen = () => {\n    setOpen(true);\n  };\n\n  const handleConfirmClose = () => {\n    setOpen(false);\n  };\n\n  const handleAgree = async () => {\n    try {\n      await deletePost({\n        variables: { postId: id },\n      });\n      window.location.assign(\"/\");\n    } catch (error) {\n      setError(error.graphQLErrors[0].message);\n    }\n    handleConfirmClose();\n  };\n\n  const handleMenuClick = (event) => {\n    setAction(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAction(null);\n  };\n\n  return (\n    <div>\n      {user && (\n        <div>\n          <MoreVertIcon\n            aria-controls=\"simple-menu\"\n            aria-haspopup=\"true\"\n            onClick={handleMenuClick}\n          />\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={action}\n            keepMounted\n            open={Boolean(action)}\n            onClose={handleMenuClose}\n          >\n            <MenuItem onClick={handleConfirmOpen}>Delete post</MenuItem>\n            {error && (\n              <Alert severity=\"error\" className={classes.error}>\n                {error}\n              </Alert>\n            )}\n          </Menu>\n          <Dialog\n            open={open}\n            onClose={handleConfirmClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {\"Are you sure you want to delete this post?\"}\n            </DialogTitle>\n            <DialogActions>\n              <Button onClick={handleConfirmClose} color=\"primary\">\n                No\n              </Button>\n              <Button onClick={handleAgree} color=\"primary\" autoFocus>\n                Yes\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default OptionButton;\n","import gql from \"graphql-tag\";\n\n// GraphQL mutation to delete a comment\nconst DELETE_COMMENT = gql`\n  mutation deleteComment($postId: ID!, $commentId: ID!) {\n    deleteComment(postId: $postId, commentId: $commentId) {\n      id        \n      comments { \n        id\n        username\n      }\n    }\n  }\n`;\n\nexport default DELETE_COMMENT;\n\n","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport DELETE_COMMENT from \"../../graphql/Comment/DeleteComment\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  CircularProgress,\n} from \"@material-ui/core\";\n\n// A dialog component for confirming the deletion of a comment\nconst DeleteCommentDialog = ({ open, onClose, onConfirm }) => (\n  <Dialog\n    open={open}\n    onClose={onClose}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n  >\n    <DialogTitle id=\"alert-dialog-title\">\n      {\"Are you sure you want to delete this comment?\"}\n    </DialogTitle>\n    <DialogActions>\n      <Button onClick={onClose} color=\"primary\">\n        No\n      </Button>\n\n      <Button onClick={onConfirm} color=\"primary\" autoFocus>\n        Yes\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n\n// A button component for deleting a comment\nconst DeleteCommentButton = ({ postId, commentId, onComplete }) => {\n  const [deleteComment, { loading, error }] = useMutation(DELETE_COMMENT);\n  const [open, setOpen] = useState(false);\n\n  // Open the dialog when the delete button is clicked\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  // Close the dialog when the user clicks the cancel button\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // Handle the deletion of the comment\n  const handleAgree = async () => {\n    try {\n      await deleteComment({\n        variables: { postId, commentId },\n      });\n      // Call the onComplete function to update the comment list\n      onComplete();\n    } catch (error) {\n      console.error(error);\n    }\n    handleClose();\n  };\n\n  // Render the delete button and the delete dialog\n  return (\n    <>\n      <DeleteIcon variant=\"outlined\" onClick={handleClickOpen} />\n      <DeleteCommentDialog\n        open={open}\n        onClose={handleClose}\n        onConfirm={handleAgree}\n      />\n      {loading && <CircularProgress />}\n      {error && <div>{error.message}</div>}\n    </>\n  );\n};\n\nexport default DeleteCommentButton;\n\n\n","\nimport React, { useContext, useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { useMutation } from \"@apollo/client\";\nimport { StoreContext } from \"../../store/store\";\nimport { useStyles, theme } from \"./styles\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport GET_POST from \"../../graphql/Post/GetPost\";\nimport CREATE_COMMENT from \"../../graphql/Comment/CreateComment\";\nimport moment from \"moment\";\nimport PostLikeButton from \"../../components/LikeButton/PostLikeButton\";\nimport CommentLikeButton from \"../../components/LikeButton/CommentLikeButton\";\nimport OptionButton from \"../../components/OptionButton/OptionButton\";\nimport DeleteCommentButton from \"../../components/OptionButton/DeleteComment\";\nimport {\n  CircularProgress,\n  Typography,\n  Card,\n  TextField,\n  Button,\n  CardMedia,\n  CardContent,\n  CardActions,\n  IconButton,\n} from \"@material-ui/core\";\n\nconst CommentPage = (props) => {\n  const classes = useStyles();\n\n  const postId = props.match.params.postId;\n\n  const { user } = useContext(StoreContext); // StoreContext used to access the current user state\n\n  // Fetch post data from the server using useQuery hook\n  const { loading, data: { getPost } = {} } = useQuery(GET_POST, {\n    variables: {\n      postId,\n    },\n  });\n\n  const [comment, setComment] = useState(\"\"); // Use state hook to manage the comment input field\n\n  const [createComment] = useMutation(CREATE_COMMENT); // useMutation hook used to create new comment\n\n  const handleCommentSubmit = async (event) => {\n    try {\n      // Call the createComment mutation function to submit new comment\n      await createComment({\n        variables: { postId, content: comment },\n      });\n      setComment(\"\"); // Reset the comment field to empty string\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  let postAndComment;\n\n  // If post data is still being fetched, display a loading spinner\n  if (loading) {\n    postAndComment = <CircularProgress />;\n  } else {\n    // Extract post data from the query result\n    const {\n      id,\n      content,\n      title,\n      dateCreated,\n      username,\n      imageUrl,\n      postLikes,\n      postLikeCount,\n      comments,\n    } = getPost;\n\n\n\n    postAndComment = (\n      <div>\n        <ThemeProvider theme={theme}>\n          <Card className={classes.root}>\n            <CardContent>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n                component=\"h2\"\n                className={classes.title}\n              >\n                {title}\n              </Typography>\n\n              <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n                component=\"h2\"\n                className={classes.username}\n              >\n                {username}\n              </Typography>\n\n              <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n                component=\"h2\"\n                className={classes.date}\n              >\n                {moment(dateCreated).fromNow()}\n              </Typography>\n\n              <CardMedia\n                className={classes.media}\n                image={\n                  imageUrl ||\n                  \"https://images.unsplash.com/photo-1601850494422-3cf14624b0b3?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80\"\n                }\n              />\n\n              <Typography\n                variant=\"h6\"\n                component=\"h2\"\n                className={classes.content}\n              >\n                {content}\n              </Typography>\n\n              <CardActions className={classes.like}>\n                <PostLikeButton\n                  user={user}\n                  post={{ id, postLikes, postLikeCount }}\n                />\n\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {postLikeCount}\n                </Typography>\n\n                <IconButton\n                  aria-label=\"settings\"\n                  className={classes.optionButtonOverlay}\n                >\n                  <OptionButton user={user} post={{ id, username }} />\n                </IconButton>\n              </CardActions>\n            </CardContent>\n          </Card>\n\n          {user && (\n            <Card className={classes.makeComment}>\n              <CardContent className={classes.inputField}>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  label=\"Post a comment\"\n                  name=\"comment\"\n                  size=\"small\"\n                  required\n                  fullWidth\n                  onChange={(event) => setComment(event.target.value)}\n                  value={comment}\n                />\n\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={comment.trim() === \"\"}\n                  onClick={handleCommentSubmit}\n                >\n                  Submit\n                </Button>\n              </CardContent>\n            </Card>\n          )}\n\n          {comments.map((comment) => (\n            <Card className={classes.comment} key={comment.id}>\n              <CardContent>\n                <Typography\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                  component=\"h2\"\n                  className={classes.commentUsername}\n                >\n                  {comment.username}\n                </Typography>\n\n                <Typography\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                  component=\"h2\"\n                  className={classes.date}\n                >\n                  {moment(comment.dateCreated).fromNow()}\n                </Typography>\n\n                <Typography\n                  variant=\"h6\"\n                  component=\"h2\"\n                  className={classes.commentContent}\n                >\n                  {comment.content}\n                </Typography>\n\n                <CardActions className={classes.like}>\n                  <CommentLikeButton\n                    user={user}\n                    postId={id}\n                    commentId={comment.id}\n                    comment={comment}\n                  />\n\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    {comment.commentLikeCount}\n                  </Typography>\n\n                  <IconButton\n                    aria-label=\"settings\"\n                    className={classes.deleteButtonOverlay}\n                  >\n                    {user && user.username === comment.username && (\n                      <DeleteCommentButton postId={id} commentId={comment.id} />\n                    )}\n                  </IconButton>\n                </CardActions>\n              </CardContent>\n            </Card>\n          ))}\n        </ThemeProvider>\n      </div>\n    );\n  }\n  return postAndComment;\n};\n\nexport default CommentPage;\n","import gql from \"graphql-tag\";\n\nconst GET_POSTS = gql`\n  {\n    getPosts {\n      id\n      imageUrl\n      title\n      content\n      dateCreated\n      username\n      postLikes {\n        id\n        username\n        dateCreated\n      }\n      postLikeCount\n      commentCount\n      comments {\n        id\n        content\n        dateCreated\n        username\n        commentLikes {\n          id\n          username\n          dateCreated\n        }\n        commentLikeCount\n      }\n    }\n  }\n`;\n\nexport default GET_POSTS;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport { createTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    borderRadius: 15,\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: \"10px 50px\",\n    backgroundColor: \"#E6F2F8\",\n    boxShadow: \"0px 2px 4px rgba(0, 0, 0, 0.25)\",\n  },\n  title: {\n    padding: \"5% 10%\",\n    color: \"#3B5998\",\n    fontSize: \"3rem\",\n    fontFamily: \"Brush Script MT, cursive\",\n    textShadow: \"1px 1px #8b9dc3\",\n  },\n}));\n\nconst theme = createTheme({\n  overrides: {\n    MuiTypography: {\n      h3: {\n        fontFamily: \"Nunito, sans-serif\",\n        fontWeight: \"bold\",\n        color: \"#3B5998\",\n        textShadow: \"1px 1px #8b9dc3\",\n      },\n      h5: {\n        fontFamily: \"Roboto, sans-serif\",\n        fontWeight: \"bold\",\n        color: \"#3B5998\",\n        textShadow: \"1px 1px #8b9dc3\",\n      },\n    },\n  },\n  palette: {\n    primary: {\n      main: \"#3B5998\",\n    },\n    secondary: {\n      main: \"#8b9dc3\",\n    },\n  },\n});\n\nexport { useStyles, theme };","import { makeStyles } from \"@material-ui/core/styles\";\nimport { createTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n    margin: \"auto\",\n    transition: \"0.3s\",\n    boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.3)\",\n    \"&:hover\": {\n      boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\",\n    },\n    position: \"relative\",\n  },\n  media: {\n    paddingTop: \"80%\",\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  username: {\n    display: \"inline-block\",\n    paddingRight: \"5%\",\n  },\n  date: {\n    display: \"inline-block\",\n    paddingLeft: \"5%\",\n  },\n  comment: {\n    marginTop: \"1%\",\n    marginLeft: \"6%\",\n  },\n  overlay: {\n    position: \"absolute\",\n    top: \"67.5%\",\n    left: \"85.5%\",\n  },\n  overrides: {\n    MuiCardActions: {\n      padding: \"0px\",\n    },\n  },\n}));\n\nconst theme = createTheme({\n  overrides: {\n    MuiCardActions: {\n      root: {\n        padding: \"1px\",\n      },\n    },\n    MuiCardContent: {\n      root: {\n        padding: \"8px 16px\",\n      },\n    },\n    MuiIconButton: {\n      root: {\n        fontSize: \"0\",\n      },\n    },\n    MuiTypography: {\n      h6: {\n        fontFamily: \"Raleway, sans-serif\",\n      },\n    },\n  },\n  palette: {\n    primary: {\n      main: \"#4791db\",\n    },\n    secondary: {\n      main: \"#F26B8A\",\n    },\n  },\n});\n\nexport { useStyles, theme };\n","import React, { useEffect, useState } from \"react\";\nimport { CardActions } from \"@material-ui/core\";\nimport CommentIcon from \"@material-ui/icons/Comment\";\n\nconst CommentButton = ({ user, post: { comments } }) => {\n  const [commented, setCommented] = useState(false);\n\n  // Check if the user has already commented on the post\n  useEffect(() => {\n    // If the user exists and there is a comment whose username matches the user's username, set commented to true\n    const hasCommented = user && comments.some(comment => comment.username === user.username);\n    setCommented(hasCommented);\n  }, [user, comments]);\n\n  // Render the comment icon in the appropriate color based on whether the user has commented\n  const icon = commented\n    ? <CommentIcon color=\"primary\" />\n    : <CommentIcon color=\"disabled\" />;\n\n  // Render the comment icon inside a CardActions component\n  return (\n    <CardActions>\n      {icon}\n    </CardActions>\n  );\n};\n\nexport default CommentButton;\n\n","import React, { useContext } from \"react\";\nimport { StoreContext } from \"../../store/store\";\nimport { useStyles, theme } from \"./styles\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport CommentButton from \"../CommentButton/CommentButton\";\nimport moment from \"moment\";\nimport clsx from \"clsx\";\nimport OptionButton from \"../OptionButton/OptionButton\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport PostLikeButton from \"../LikeButton/PostLikeButton\";\nimport { DonateApp } from \"../../pages/DonateButton\";\n\nimport {\n  Card,\n  CardMedia,\n  CardContent,\n  CardActions,\n  IconButton,\n  Typography,\n  Collapse,\n} from \"@material-ui/core\";\n\nconst PostCard = ({\n  post: {\n    id,\n    imageUrl,\n    title,\n    content,\n    dateCreated,\n    username,\n    postLikes,\n    postLikeCount,\n    commentCount,\n    comments,\n  },\n}) => {\n  const { user } = useContext(StoreContext);\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const classes = useStyles();\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Card className={classes.root}>\n        <CardMedia\n          className={classes.media}\n          image={\n            imageUrl ||\n            \"https://images.unsplash.com/photo-1601850494422-3cf14624b0b3?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80\"\n          }\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h6\" className={classes.title}>\n            {title.length > 20 ? title.substring(0, 20) + \" ...\" : title}\n          </Typography>\n\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n            className={classes.username}\n          >\n            {username}\n          </Typography>\n\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n            className={classes.date}\n          >\n            {moment(dateCreated).fromNow()}\n          </Typography>\n\n          <IconButton aria-label=\"settings\" className={classes.overlay}>\n            <OptionButton user={user} post={{ id, username }} />\n          </IconButton>\n        </CardContent>\n        <CardActions disableSpacing>\n          <PostLikeButton user={user} post={{ id, postLikes, postLikeCount }} />\n\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {postLikeCount}\n          </Typography>\n\n          <IconButton href={`/posts/${id}`} className={classes.comment}>\n            <CommentButton user={user} post={{ comments }} />\n          </IconButton>\n\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {commentCount}\n          </Typography>\n\n          <DonateApp />\n\n          <IconButton\n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded,\n            })}\n            onClick={handleExpandClick}\n            aria-expanded={expanded}\n            aria-label=\"show more\"\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        </CardActions>\n\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <Typography variant=\"h6\" className={classes.content}>\n              {content}\n            </Typography>\n          </CardContent>\n        </Collapse>\n      </Card>\n    </ThemeProvider>\n  );\n};\n\nexport default PostCard;\n","import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport GET_POSTS from \"../../graphql/Post/GetPosts\";\nimport { useStyles, theme } from \"./styles\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport PostCard from \"../../components/PostCard/PostCard\";\n// import { DonateApp } from \"../DonateButton\";\nimport {\n  Grid,\n  CircularProgress,\n  Typography,\n  Container,\n} from \"@material-ui/core\"; // imports Material UI components\n\nconst Home = () => {\n  // This component is a functional component named Home\n  const { loading, data: { getPosts: posts } = {} } = useQuery(GET_POSTS); // This line uses the useQuery hook to fetch data from the GraphQL server\n\n  const classes = useStyles(); // This line initializes the styling classes\n\n  return loading ? ( // This is a ternary operator that checks if the data is still loading\n    <CircularProgress /> // This displays a loading spinner if the data is still loading\n  ) : (\n    posts && ( // If the data has loaded, this checks if there are any posts available\n      <ThemeProvider theme={theme}>\n        <Grid>\n          <Container component=\"main\" className={classes.title}>\n            {/* These are Typography components that display the page title and a description */}\n            <Typography component=\"h1\" variant=\"h3\" align=\"center\">\n              Anime Home\n            </Typography>\n            <Typography component=\"h1\" variant=\"h5\" align=\"center\">\n              Welcome to our collection of anime posts! Whether you're a\n              long-time fan of the medium or just getting started, we're\n              confident you'll find something here to pique your interest. So\n              sit back, relax, and dive into the wonderful world of anime!\n            </Typography>\n          </Container>\n\n          <Grid\n            className={classes.container}\n            container\n            alignItems=\"stretch\"\n            spacing={3}\n          >\n            {/* This maps over the posts and renders a PostCard component for each post */}\n            {posts.map((post) => (\n              <Grid key={post.id} item xs={12} sm={6} md={4}>\n                <PostCard post={post} />\n                {/* <DonateApp /> */}\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n      </ThemeProvider>\n    )\n  );\n};\n\nexport default Home;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport { createTheme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    textDecoration: \"none\",\n    color: \"white\",\n    flexGrow: 1,\n  },\n  button: {},\n}));\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#e91e63\",\n      light: \"#ff6090\",\n      dark: \"#b0003a\",\n      contrastText: \"#fff\",\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      colorPrimary: {\n        background: \"linear-gradient(45deg, #e91e63 0%, #9c27b0 50%, #673ab7 100%)\",\n      },\n    },\n  },\n});\n\n\nexport { useStyles, theme };\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { StoreContext } from \"../../store/store\";\nimport { useStyles, theme } from \"./styles\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { AppBar, Toolbar, Typography, Button } from \"@material-ui/core\";\nimport { DonateApp } from \"../../pages/DonateButton\";\n\nconst MenuAppBar = () => {\n  const classes = useStyles();\n  const context = useContext(StoreContext);\n\n  return context.user ? (\n    <ThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography\n              component={Link}\n              to=\"/\"\n              variant=\"h6\"\n              className={classes.title}\n            >\n              {context.user.username}\n            </Typography>\n\n            <Button color=\"inherit\" component={Link} to=\"/chat\">\n              Chat\n            </Button>\n\n            <Button color=\"inherit\" component={Link} to=\"/post\">\n              Post\n            </Button>\n\n            <Button color=\"inherit\" onClick={context.logout}>\n              Logout\n            </Button>\n            <DonateApp />\n          </Toolbar>\n        </AppBar>\n      </div>\n    </ThemeProvider>\n  ) : (\n    <ThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography\n              component={Link}\n              to=\"/\"\n              variant=\"h6\"\n              className={classes.title}\n            >\n              Home\n            </Typography>\n\n            <Button color=\"inherit\" component={Link} to=\"/login\">\n              Login\n            </Button>\n\n            <Button color=\"inherit\" component={Link} to=\"/register\">\n              Register User\n            </Button>\n\n            <DonateApp component={Link} to=\"/donate\" />\n          </Toolbar>\n        </AppBar>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default MenuAppBar;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    backgroundColor: \"#F5F5F5\",\n    borderRadius: \"15px\",\n    padding: \"50px\",\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: \"#f44336\",\n    color: \"#FFFFFF\",\n    borderRadius: \"20px\",\n    padding: \"10px 50px\",\n    fontSize: \"1.5rem\",\n    fontFamily: \"Arial, sans-serif\",\n    textTransform: \"uppercase\",\n    boxShadow: \"0px 4px 4px rgba(0, 0, 0, 0.25)\",\n  },\n  error: {\n    marginTop: \"2%\",\n    fontFamily: \"Arial, sans-serif\",\n    color: \"#f44336\",\n    fontSize: \"1.2rem\",\n  },\n}));\n\nexport default useStyles;","import { makeStyles } from \"@material-ui/core/styles\";\nimport { createTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage:\n      \"url(https://images.unsplash.com/photo-1528360983277-13d401cdc186?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80)\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: \"#F26B8A\",\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  error: {\n    margin: \"1% 0% 3% 0%\",\n  },\n}));\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#4791db\",\n    },\n    secondary: {\n      main: \"#F26B8A\",\n    },\n  },\n  overrides: {\n    MuiTypography: {\n      h5: {\n        fontFamily: \"Cinzel Decorative, sans-serif\",\n        color: \"#F26B8A\",\n      },\n    },\n  },\n});\n\nexport { useStyles, theme };\n","import gql from \"graphql-tag\";\n\nconst CREATE_POST = gql`\n  mutation createPost($title: String!, $content: String!, $imageUrl: String) {\n    createPost(title: $title, content: $content, imageUrl: $imageUrl) {\n      imageUrl\n      title\n      content\n    }\n  }\n`;\n\nexport default CREATE_POST;\n","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport useStyles from \"./styles\";\nimport { theme } from \"../SignIn/styles\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport CREATE_POST from \"../../graphql/Post/CreatePost\";\nimport { Alert } from \"@material-ui/lab\";\nimport {\n  Typography,\n  TextField,\n  Button,\n  Container,\n  CssBaseline,\n} from \"@material-ui/core\";\n\nconst Post = () => {\n  const classes = useStyles();\n\n  // Initializing state variables\n  const [postFormData, setPostFormData] = useState({\n    title: \"\",\n    content: \"\",\n    imageUrl: \"\",\n  });\n  const [error, setError] = useState(\"\");\n\n  // Destructuring state variables\n  const { title, content, imageUrl } = postFormData;\n\n  // Event handler for input changes\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setPostFormData({ ...postFormData, [name]: value });\n  };\n\n  // Mutation hook to create a new post\n  const [createPost] = useMutation(CREATE_POST);\n\n  // Event handler for form submission\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // Validating form data\n    if (!title || !content) {\n      setError(\"Title and content are required\");\n      return;\n    }\n\n    // Clearing error message\n    setError(\"\");\n\n    try {\n      // Calling the createPost mutation with form data as variables\n      await createPost({\n        variables: { ...postFormData },\n      });\n\n      // Redirecting to homepage after successful post creation\n      window.location.assign(\"/\");\n    } catch (error) {\n      // Setting error message if an error occurs during mutation\n      setError(error.graphQLErrors[0].message);\n    }\n  };\n\n  return (\n    // Applying the custom theme to the component\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"sm\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sharing a future adventure\n          </Typography>\n          {/* Form for creating a new post */}\n          <form noValidate className={classes.form} onSubmit={handleFormSubmit}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              label=\"title\"\n              name=\"title\"\n              autoFocus\n              required\n              fullWidth\n              onChange={handleInputChange}\n              value={title}\n            />\n\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              label=\"content\"\n              name=\"content\"\n              required\n              fullWidth\n              multiline\n              onChange={handleInputChange}\n              value={content}\n            />\n\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              name=\"imageUrl\"\n              label=\"imageUrl\"\n              size=\"small\"\n              required\n              fullWidth\n              onChange={handleInputChange}\n              value={imageUrl}\n            />\n\n            {/* Button for submitting the form */}\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              submit\n            </Button>\n            {/* Displaying error message if there is any */}\n            {error && (\n              <Alert severity=\"error\" className={classes.error}>\n                {error}\n              </Alert>\n            )}\n          </form>\n        </div>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default Post;\n","import gql from \"graphql-tag\";\n\nconst LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      id\n      email\n      username\n      dateCreated\n      authToken\n    }\n  }\n`;\n\nexport default LOGIN;\n","import React, { useState, useContext } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { useStyles, theme } from \"./styles\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport LOGIN from \"../../graphql/User/SignIn\";\nimport { StoreContext } from \"../../store/store\";\nimport { Alert } from \"@material-ui/lab\";\nimport {\n  Button,\n  CssBaseline,\n  TextField,\n  Link,\n  Paper,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\n\nconst SignInForm = () => {\n  // Getting the store context and styles\n  const context = useContext(StoreContext);\n  const classes = useStyles();\n\n  // Setting up state for handling form errors and form data\n  const [error, setError] = useState(\"\");\n  const [userFormData, setUserFormData] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  // Destructuring form data for readability\n  const { username, password } = userFormData;\n\n  // Mutation hook for signing in user\n  const [signIn] = useMutation(LOGIN);\n\n  // Function for updating form data state when input changes\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  // Function for handling form submission\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // Validating form input\n    if (!username || !password) {\n      setError(\"All fields are required\");\n      return;\n    }\n\n    // Clearing previous errors\n    setError(\"\");\n\n    try {\n      // Signing in user and setting user data in context\n      const {\n        data: { login: userData },\n      } = await signIn({\n        variables: { ...userFormData },\n      });\n      context.login(userData);\n      window.location.assign(\"/\");\n    } catch (error) {\n      // Setting errors thrown by the GraphQL server\n      setError(error.graphQLErrors[0].message);\n    }\n  };\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container component=\"main\" className={classes.root}>\n        <CssBaseline />\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\n\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <div className={classes.paper}>\n            <Typography component=\"h1\" variant=\"h5\">\n              Login\n            </Typography>\n\n            <form\n              className={classes.form}\n              noValidate\n              onSubmit={handleFormSubmit}\n            >\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                label=\"Username\"\n                name=\"username\"\n                required\n                fullWidth\n                autoFocus\n                onChange={handleInputChange}\n                value={username}\n              />\n\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                required\n                fullWidth\n                onChange={handleInputChange}\n                value={password}\n              />\n\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Sign In\n              </Button>\n\n              {error && (\n                <Alert severity=\"error\" className={classes.error}>\n                  {error}\n                </Alert>\n              )}\n\n              <Grid container>\n                <Grid item>\n                  <Link href=\"/Register\" variant=\"body2\">\n                    {\"Don't have an account? Sign Up\"}\n                  </Link>\n                </Grid>\n              </Grid>\n            </form>\n          </div>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n};\n\nexport default SignInForm;\n","import gql from \"graphql-tag\";\n\nconst CREATE_USER = gql`\n  mutation createUser($username: String!, $email: String!, $password: String!) {\n    createUser(username: $username, email: $email, password: $password) {\n      id\n      email\n      username\n      dateCreated\n      authToken\n    }\n  }\n`;\n\nexport default CREATE_USER;\n","import React, { useState, useContext } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  CssBaseline,\n  TextField,\n  Link,\n  Grid,\n  Typography,\n  Container,\n} from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { theme } from \"../SignIn/styles\";\nimport CREATE_USER from \"../../graphql/User/SignUp\";\nimport { StoreContext } from \"../../store/store\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  error: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst SignUpForm = () => {\n  const classes = useStyles();\n  const [error, setError] = useState(\"\");\n  const [userFormData, setUserFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const { username, email, password } = userFormData;\n\n  const context = useContext(StoreContext);\n\n  const [addUser, { loading }] = useMutation(CREATE_USER, {\n    onError: (error) => {\n      setError(error.graphQLErrors[0].message);\n    },\n  });\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const validate = () => {\n    if (!email || !username || !password) {\n      return \"All fields are required\";\n    }\n\n    const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (!emailRegex.test(String(email).toLowerCase())) {\n      return \"Enter a valid email address.\";\n    }\n\n    const usernameRegex = /^(?!.*\\.\\.)(?!.*\\.$)[^\\W][\\w.]{0,29}$/;\n    if (!usernameRegex.test(username)) {\n      return \"Usernames can only use letters, numbers, underscores and periods\";\n    } else if (username.length > 20) {\n      return \"Username no more than 20 characters\";\n    }\n\n    if (password.length < 6) {\n      return \"Password min 6 characters\";\n    }\n\n    return \"\";\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    const validationError = validate();\n    if (validationError) {\n      setError(validationError);\n      return false;\n    }\n\n    try {\n      const { data } = await addUser({\n        variables: { ...userFormData },\n      });\n      const userData = data.createUser;\n      context.login(userData);\n      window.location.assign(\"/\");\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Register\n            </Typography>\n      {error && (\n        <Alert className={classes.error} severity=\"error\">\n          {error}\n        </Alert>\n      )}\n      <form className={classes.form} onSubmit={handleFormSubmit}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Username\"\n              name=\"username\"\n              value={username}\n              onChange={handleInputChange}\n              autoComplete=\"username\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              value={email}\n              onChange={handleInputChange}\n              autoComplete=\"email\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={handleInputChange}\n              autoComplete=\"current-password\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          disabled={loading}\n        >\n          {loading ? \"Loading...\" : \"Register\"}\n        </Button>\n        <Grid container>\n          <Grid item>\n            <Link href=\"/signin\" variant=\"body2\">\n              Already have an account? Sign in\n            </Link>\n          </Grid>\n        </Grid>\n      </form>\n    </div>\n  </Container>\n</ThemeProvider>\n);\n};\n\nexport default SignUpForm;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Container } from \"@material-ui/core\";\nimport { StoreProvider } from \"./store/store\";\nimport Comment from \"./pages/Comment/Comment\";\nimport Home from \"./pages/Home/Home\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Post from \"./pages/Post/Post\";\nimport SignIn from \"./pages/SignIn/SignIn\";\nimport SignUp from \"./pages/SignUp/SignUp\";\nimport Chat from  \"./pages/Chat/Chat\";\nimport Profile from \"./pages/Profile/Profile\";\nimport FollowButton from \"./pages/Follow/FollowButton\";\nimport UserSearch from \"./pages/UserSearch/UserSearch\";\nimport \"./App.css\";\nconst App = () => {\n   return (\n\n //Wrap the entire app with StoreProvider to make the store available to all components\n    <StoreProvider>\n      <Router>\n        <Container>\n          {/* The Navbar component is displayed on every page */}\n          <Navbar />\n\n          {/* Define routes for each page */}\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/login\" component={SignIn} />\n          <Route exact path=\"/register\" component={SignUp} />\n          <Route exact path=\"/post\" component={Post} />\n          <Route exact path=\"/posts/:postId\" component={Comment} />\n          <Route exact path=\"/chat\" component={Chat} />\n          <Route exact path=\"/profile\" component={Profile} />\n          <Route exact path=\"/userSearch\" component={UserSearch} />\n          <Route exact path=\"/follow\" component={FollowButton} />\n        </Container>\n      </Router>\n    </StoreProvider>  \n\n  );\n};\n\nexport default App;\n","import reportWebVitals from \"./reportWebVitals\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  ApolloClient,\n  ApolloProvider,\n  createHttpLink,\n  InMemoryCache,\n} from \"@apollo/client\";\nimport { setContext } from \"apollo-link-context\";\n\n// import 'bootstrap/dist/css/bootstrap.css';\n\n\n\n\nimport App from \"./App\";\n// import { DonateApp } from \"./pages/DonateButton\";\n\n\n// Set up the HTTP link for Apollo Client to connect to the GraphQL server\nconst httpLink = createHttpLink({\n  // uri: \"https://anime-amigos.herokuapp.com/graphql\",\n  uri: \"http://localhost:3001/graphql\", // Replace with your GraphQL server URL\n});\n\n// Set up the authorization link to attach the token to the headers\nconst authLink = setContext(() => {\n  const token = localStorage.getItem(\"token\");\n  return {\n    headers: {\n      Authorization: token ? `Bearer ${token}` : \"\", // Attach the token to the Authorization header\n    },\n  };\n});\n\n// Create the Apollo Client with the HTTP and authorization links and the in-memory cache\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n  \n});\n\n\n\n// Render the app with the Apollo Client provider\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n    {/* <DonateApp /> */}\n  </ApolloProvider>,\n  document.getElementById(\"root\") // Render the app in the HTML element with the ID \"root\"\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}